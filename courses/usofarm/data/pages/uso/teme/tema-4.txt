<hidden>
====== Tema 4 ======

<note>
**Ce trebuie să știu?** Studiați secțiunea de [[#cunostinte_evaluate|Cunoștințe evaluate]] și suportul agregat necesar temei.

**Thread nou? Nu.** Pentru o ușoară parcurgere a mesajelor, folosiți thread-urile de discuții existente în cadrul forumului, fără a crea altele. În consecință, thread-urile (subiectele de discuții) nou create vor fi șterse.

**Căutare.** Căutați pe forum informația pe care doriți să o obțineți, înainte să puneți o întrebare. De cele mai multe ori, cineva a mai întrebat același lucru. În fiecare thread al forumului aveți informații despre cum puteți căuta în forum.

**Printscreen/poză? Nu.** În cazul în care doriți să publicați un printscreen pe forum, recomandăm folosirea site-urilor pentru partajarea gratuită a imaginilor, precum [[http://imgur.com/|imgur]] sau [[http://www.makeuseof.com/tag/4-imgur-alternatives-for-uploading-sharing-images/|alternativele]] sale, publicând pe forum doar link către printscreen. Pozele inserate în răspunsuri, vor fi șterse. 

**Actualizări.** Urmăriți atât forumul cât și modificările aduse enunțului/checker-ului, modificări ce sunt publicate și explicate în paragrafele de mai jos.

**Regulament.** Înainte și în timpul realizării temei, vă rugăm să parcurgeți [[uso:regulament#realizarea_temelor|indicațiile legate de realizarea temelor]], încluzând ce înseamnă o temă copiată și cum penalizăm temele copiate. Folosiți cu încredere forumurile de pe [[http://cs.curs.pub.ro/|cs.curs.pub.ro]] pentru întrebări și neclarități legate de teme.

**Întrebări frecvente.** În timpul realizării temei, când vă loviți de probleme și aveți nevoie de suportul echipei de USO, parcurgeți și lista de [[uso:teme:intrebari-frecvente|întrebări frecvente întâlnite în cadrul temelor]]. Să țineți cont, va rugăm, și de [[uso:regulament#recomandari_de_comunicare_electronica|recomandările de comunicare electronică]].

**Ajutor reciproc.** Vă încurajăm ca atunci când găsiți soluția la o problemă pe care ați postat-o anterior pe forum să postați și soluția găsită. De asemenea dacă știți răspunsul la întrebările colegilor sunteți încurajați să le răspundeți.
</note>

===== Informații generale =====

<note important>
Deadline: **10 Ianuarie 2018, ora 23:55**\\
Timp de lucru: **Enough**\\
Punctaj: **0.8 puncte** din nota finală\\
Formular pentru trimitere temă: [[ https://docs.google.com/forms/d/1msG5ZoiiQdPHX8OMsTLBydXoOv-v-6dZ7hZGoe4lJ1s | Formular submitere ]]
</note>

<note>
**Actualizări enunț:**
  * 4 Ian 2018 V2
    * Task01 - Update enunt rail-fence, poate contine caractere alfanumerice, linie ''-'', virgula '','' si spatii.
</note>

<note>
**Actualizări checker:**
  * 19 Dec 2017 V6
    * Task02 - update checker, acum checker-ul accepta si combinatii de space/tabs in configurare
  * 19 Dec 2017 V5
    * Task04 - update checker anti-cheating
  * 19 Dec 2017 V4
    * Task03 - update checker
  * 18 Dec 2017 V3
    * Task02 - update checker
  * 15 Dec 2017 V2
    * Task01 - update teste pentru ''xor.sh''
</note>

===== Cunoștințe evaluate =====

  * notiuni avansata de shell scripting
  * sisteme de fisiere
  * security
  * procese

===== Testarea temei. Finalizarea temei. Mașină virtuală. =====

{{section>uso:teme:testare&noheader&nofooter}}

<note warning>Este interzisă publicarea pe forum a comenzilor sau pozelor care fac parte din rezolvarea parțială sau integrală a temei ori a unui task. Puteți să sugerați diferite abordări sau să dați idei generale (dar nu comenzi) celorlalți. Urmăriți [[uso:regulament#realizarea_temelor|indicațiile legate de realizarea temelor]]. La prima abatere studentul primește un avertisment, iar punctajul obținut pe temă îi este redus cu valoarea punctajului pe task-ul respectiv. Începând cu a doua abatere, se va anula întregul punctaj pe tema curentă. Temele anterioare sau cele viitoare nu vor fi afectate. Abaterile se păstrează pe parcursul semestrului. Ori de câte ori se încalcă această regulă, se va ține cont de istoricul abaterilor. Abaterile vor fi actualizate în catalog.</note>

==== Task 01 (20p) ====

Ciphers... ciphers everywhere.

Vă aflați în folderul ''/home/student/tema04/task01''. Va trebui sa implementati urmatorii algoritmi de criptare/decriptare in bash.

<note warning>
Toate scripturile se vor doar in bash!
</note>

<note>
Pentru testare este recomandat sa rulati checkerul doar pe task-ul curent folosind ''sudo uso check 1''
</note>

  * **[5p]** Xor cipher: cel mai simplu mod de criptare al unui string este realizat prin aplicarea operatiei xor caracter cu caracter folosindu-ne de o cheie.
    * Creați un script numit ''xor.sh''. Scriptul primește două argumente:
      * argumentul 1 reprezintă textul care se va cripta/decripta
      * argumentul 2 reprezintă cheia cu care se va cripta/decripta
    * Daca dimensiunea cheii este mai mica decat textul se va face padding la cheie cu ea insasi pana cand se ajunge la dimeansiunea textului.
    * Se va garanta input care va genera caractere printabile 
    * Mai multe detalii despre Xor Cipher gasiti aici: [[https://en.wikipedia.org/wiki/XOR_cipher|Wiki]] [[https://en.wikipedia.org/wiki/One-time_pad|One Time Pad]]
    * Exemplu de folosire a scriptului ''xor.sh'':
<code bash>
[student@uso]$ ./xor.sh "simple_test" "#"    
PJNSOF|WFPW
[student@uso]$ ./xor.sh "simple_test" "####"  # este echivalent cu exemplul de mai sus
PJNSOF|WFPW
</code>

  * **[10p]** Caesar cipher: este un tip de criptare prin substituie. Dandu-se un text si o cheie ca input fiecare caracter va fi shiftat la dreapta cu numarul indicat de cheie. 
    * Creați un script numit ''caesar.sh''. Scriptul primește trei argumente:
      * argumentul 1 reprezintă reprezinta modul de functionare, criptare sau decriptare, poate lua 2 valori: ''enc'' sau ''dec''
      * argumentul 2 reprezintă textul care se va cripta/decripta
      * argumentul 3 reprezintă cheia de substitutie, daca este omis se va considera valoarea implicita 13
    * Se garanteaza ca input pentru acest cipher doar caractere din alfabetul latin
    * Mai multe detalii despre Caesar Cipher gasiti aici: [[https://en.wikipedia.org/wiki/Caesar_cipher|Wiki]] [[https://en.wikipedia.org/wiki/ROT13|ROT13]]
    * Exemplu de folosire a scriptului ''caesar.sh'':
<code bash>
[student@uso]$ ./caesar.sh "enc" "ABC" 3
DEF
[student@uso]$ ./caesar.sh "enc" "simpleTest"
fvzcyrGrfg
[student@uso]$ ./caesar.sh "enc" "simpleTest" 13  # este echivalent cu exemplul de mai sus
fvzcyrGrfg
[student@uso]$ ./caesar.sh "dec" "fvzcyrGrfg" 13
simpleTest
</code> 
 
  * **[15p]** Rail-fence cipher: este un mod de criptare prin transpozitie care transpune un text pe un anumit numar de randuri in zig-zag. 
    * Creați un script numit ''rail-fence.sh''. Scriptul primește trei argumente:
      * argumentul 1 reprezintă reprezinta modul de functionare, criptare sau decriptare, poate lua 2 valori: ''enc'' sau ''dec''
      * argumentul 2 reprezintă textul care se va cripta/decripta
      * argumentul 3 reprezintă cheia
    * Se garanteaza ca input pentru acest cipher doar caractere alfanumerice, spatii, linie ''-'' si virgula '',''.
    * Mai multe detalii despre Rail-Fence Cipher gasiti aici: [[https://en.wikipedia.org/wiki/Rail_fence_cipher|Wiki]]
    * Exemplu de folosire a scriptului ''rail-fence.sh'':
<code bash>
[student@uso]$ ./rail-fence.sh "enc" "the attack is now" 3
tacswh taki oet n
[student@uso]$ ./rail-fence.sh "dec" "tacswh taki oet n" 3
the attack is now
</code> 




==== Task 02 (20p) ====

<note warning>
Este recomandata testarea individuala a acestui task folosind ''sudo uso check 2''.

**Testarea va dura aproximativ un minut.** Be patient!
</note>

Vă aflați în folderul ''/home/student/tema04/task02''.

Creati un script cu numele ''job.sh''. Continutul scriptului va fi urmatorul:
<code bash>
#!/bin/bash
    
date >> /home/student/tema04/task02/log
</code>

Configurati masina virtuala astfel incat scriptul va fi rulat automat din minut in minut.

<note>
Hint ''man crontab''
</note>

Modificati scriptul astfel incat sa protejati log-ul de orice modificare din exterior. ''job.sh'' va putea modifica ''log'' si se vor observa noile intrari create din minut in minut. Oricine va putea citi ''log'' dar nu il va putea modifica cu usurinta, chiar daca are drept de ''sudo''.

<code bash>
[student@uso]$ cat log
Thu Dec 13 15:04:01 UTC 2017
Thu Dec 13 15:05:01 UTC 2017
[student@uso]$ echo "Fake entry here" >> log
-bash: log: Permission denied
[student@uso]$ sudo echo "Fake entry here" >> log 
-bash: log: Permission denied
[student@uso]$ rm log
rm: remove write-protected regular file 'log'? yes
rm: cannot remove 'log': Operation not permitted
[student@uso]$ sudo rm log
rm: cannot remove 'log': Operation not permitted
</code>
==== Task 03 (20p) ====

<note warning>
Acest task se va testa direct pe VM, fara conexiuni de ssh de pe masina host.

De asemenea este recomandat sa il testati individual folosind ''sudo uso check 3''. **Nu tastati nimic in timp ce se executa scriptul de testare!** Dupa terminarea checker-ului este posibil sa nu mai apara nimic din ce tastati la terminal desi comenzile merg in continuare. Daca se intampla acest lucru tastati ''reset'' si terminal va reveni la normal.
</note>
  
Vă aflați în folderul ''/home/student/tema04/task03''. Pentru acest task va trebui sa implementati un [[https://en.wikipedia.org/wiki/Keystroke_logging|keylogger]] simplificat, acesta este un software care va inregistra tot ce se scrie la tastatura. 
Linux va pune la dispozitie un anumit utilitar care va rezolva mare parte din munca.

<note>
Hint: ''man showkey''

Cititi cu atentie manualul, nu este nevoie de bucle infinite pentru acest task!
</note>

Creati scriptul de bash ''keylogger.sh'' care va intercepta cand se apasa o tasta si va inregistra totul in ''output.log'' intr-o forma **human readible**. Exemplu de utilizare/testare/output:

<code bash>
[student@usovm]$ sudo ./keylogger.sh
 
</code>

Dupa ce am dat enter porneste procesul si terminalul curent ramane aparent neresponsiv. Intre timp tastez "# loktar ogar<enter>". Dupa ce se termina scriptul inspectam rezultatul.

<code bash>
[student@usovm]$ cat output.log

3 loktar ogar
</code>

Va trebui sa interceptati doar caracterele alfanumerice, spatiu si enter. A se observa ca ''#'' a fost capturat ca ''3'' in acest exemplu.

==== Task 04 (30p) ====
  
Vă aflați în folderul ''/home/student/tema04/task04''. Porniti task-ul cu ''sudo uso check 4'', in momentul acesta aveti executabilul ''forensics''. Executabilul asteapta un input specific de la voi, daca il nimeriti va afisa un [[https://en.wikipedia.org/wiki/Capture_the_flag#Computer_security|Flag]] ascuns.

Creati scriptul de bash ''solution.sh'' care va apela de fiecare data executabilul si va genera input-ul corect pentru a afisa flag-ul.

===== Task obligatoriu pentru toate temele (0p) =====

Asigurați-vă că ați submis tema și ați încărcat codul aferent submisiei în formularul din secțiunea de [[#informatii_generale|Informații generale]]. Acest lucru este necesar ori de câte ori modificați tema și o submiteți din nou (detalii [[uso:teme:instructiuni-checker#pasi|aici]]), până la termenul limită. În caz contrar, punctajul aferent temei va fi nul (0 puncte).


</hidden>